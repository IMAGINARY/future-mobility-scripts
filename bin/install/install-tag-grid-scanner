#!/bin/bash

set -e

export DEBIAN_FRONTEND=noninteractive

# Update the list of available packages
apt update

COMMITISH="a8f0b18"
REPO_URL="https://github.com/IMAGINARY/tag-grid-scanner.git"
INSTALL_DIR="/opt/future-mobility/tag-grid-scanner"

"${BASH_SOURCE%/*}/../internal/install-source-from-git" "$COMMITISH" "$REPO_URL" "$INSTALL_DIR"

# Python 3.9 is not available via the official Ubuntu 22.04 repos, so we install
# it via a PPA.
add-apt-repository --yes ppa:deadsnakes/ppa
apt install -yq --no-install-recommends \
    pipx \
    python3.9 \
    python3.9-distutils \
    '' # dummy entry to terminate the list

# Install pipenv from PyPI because the one packages with Ubuntu 22.04 is broken.
PIPX_HOME=/opt/pipx PIPX_BIN_DIR=/usr/local/bin pipx install pipenv==2023.2.4

cd "$INSTALL_DIR" || exit 1
PIPENV_VENV_IN_PROJECT=1 pipenv install --deploy

TAG_GRID_SCANNER_EXECUTABLE=/usr/bin/tag-grid-scanner
cat >"${TAG_GRID_SCANNER_EXECUTABLE}" <<EOL
#!/bin/bash
# This wrapper script is supposed to be visible in ps -a resp. ps -u `id -u` to make
# it easy to kill it (by a script or manually)

PIDS=""
function finish {
    EXIT_CODE=\$?
    kill \$PIDS >/dev/null 2>&1
    exit \$EXIT_CODE
}
trap finish SIGINT SIGTERM EXIT

# Launch the app in the background
PROJECT_PATH=/opt/future-mobility/tag-grid-scanner
export PIPENV_PIPFILE="\${PROJECT_PATH}/Pipfile"
export PIPENV_VENV_IN_PROJECT=1
pipenv run python "\${PROJECT_PATH}/runner.py" "\$@" &
PID_UI=\$!
PIDS="\$PIDS \$PID_UI"

# Wait for the exhibit to finish or until the signal trap is triggered
wait \$PID_UI
EOL
chmod +x "${TAG_GRID_SCANNER_EXECUTABLE}"
