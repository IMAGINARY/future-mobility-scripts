#!/bin/bash
# This wrapper script is supposed to be visible in ps -a resp. ps -u `id -u` to make
# it easy to kill it (by a script or manually)

PIDS=""
function finish {
    EXIT_CODE=$?
    kill $PIDS >/dev/null 2>&1
    exit $EXIT_CODE
}
trap finish SIGINT SIGTERM EXIT


# Configuration
FUTURE_MOBILITY_APP_DASHBOARD_DISPLAY_DEFAULT="0"
if [[ -z "${FUTURE_MOBILITY_APP_DASHBOARD_DISPLAY}" ]]; then
  echo "FUTURE_MOBILITY_APP_DASHBOARD_DISPLAY environment variable not set. Using default value: ${FUTURE_MOBILITY_APP_DASHBOARD_DISPLAY_DEFAULT}"
  export FUTURE_MOBILITY_APP_DASHBOARD_DISPLAY="$FUTURE_MOBILITY_APP_DASHBOARD_DISPLAY_DEFAULT"
else
  echo "Using FUTURE_MOBILITY_APP_DASHBOARD_DISPLAY environment variable. Value: ${FUTURE_MOBILITY_APP_DASHBOARD_DISPLAY}"
fi

FUTURE_MOBILITY_APP_CITY_DISPLAY_DEFAULT="1"
if [[ -z "${FUTURE_MOBILITY_APP_CITY_DISPLAY}" ]]; then
  echo "FUTURE_MOBILITY_APP_CITY_DISPLAY environment variable not set. Using default value: ${FUTURE_MOBILITY_APP_CITY_DISPLAY_DEFAULT}"
  export FUTURE_MOBILITY_APP_CITY_DISPLAY="$FUTURE_MOBILITY_APP_CITY_DISPLAY_DEFAULT"
else
  echo "Using FUTURE_MOBILITY_APP_CITY_DISPLAY environment variable. Value: ${FUTURE_MOBILITY_APP_CITY_DISPLAY}"
fi

FUTURE_MOBILITY_SPY_DISPLAY_DEFAULT="2"
if [[ -z "${FUTURE_MOBILITY_SPY_DISPLAY}" ]]; then
  echo "FUTURE_MOBILITY_SPY_DISPLAY environment variable not set. Using default value: ${FUTURE_MOBILITY_SPY_DISPLAY_DEFAULT}"
  export FUTURE_MOBILITY_SPY_DISPLAY="$FUTURE_MOBILITY_SPY_DISPLAY_DEFAULT"
else
  echo "Using FUTURE_MOBILITY_SPY_DISPLAY environment variable. Value: ${FUTURE_MOBILITY_SPY_DISPLAY}"
fi

FUTURE_MOBILITY_SPY_DEFAULT=true
if [[ -z "${FUTURE_MOBILITY_SPY}" ]]; then
  echo "FUTURE_MOBILITY_SPY environment variable not set. Using default value: ${FUTURE_MOBILITY_SPY_DEFAULT}"
  export FUTURE_MOBILITY_SPY="$FUTURE_MOBILITY_SPY_DEFAULT"
else
  echo "Using FUTURE_MOBILITY_SPY environment variable. Value: ${FUTURE_MOBILITY_SPY}"
fi


if [[ "${FUTURE_MOBILITY_DEBUG}" == true ]]; then
  exhibit-future-mobility-scanner-headless-debug &
  PID_SCANNER=$!
  PIDS="$PIDS $PID_SCANNER"
else
  exhibit-future-mobility-scanner-headless &
  PID_SCANNER=$!
  PIDS="$PIDS $PID_SCANNER"
fi

exhibit-future-mobility-app-server &
PID_APP_SERVER=$!
PIDS="$PIDS $PID_APP_SERVER"

sleep 1

if [[ "${FUTURE_MOBILITY_SPY}" == true ]]; then
  exhibit-future-mobility-spy &
  PID_SPY=$!
  PIDS="$PIDS $PID_SPY"
fi

sleep 2

exhibit-future-mobility-app-dashboard &
PID_APP_DASHBOARD=$!
PIDS="$PIDS $PID_APP_DASHBOARD"

exhibit-future-mobility-app-city &
PID_APP_CITY=$!
PIDS="$PIDS $PID_APP_CITY"

# Wait for the exhibit to finish or until the signal trap is triggered
wait -n $PIDS
exit $?
